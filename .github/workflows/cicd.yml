name: CICD Pipeline

on:
  push:
    branches: [ "main" ]
 
jobs:
  compile:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
      
  security-check:
   

    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |
       brew install aquasecurity/trivy/trivy
        
    - name: Trivy Fs Scan     
      run: trivy fs --format table -o fs-report-json .
      
    - name: Gitleaks Installation
      run: brew install gitleaks

    - name: Gitleaks Code Scan
      run: gitleaks detect --source . -r gitleaks-report.json -f json

  test:
 
    runs-on: self-hosted
    needs: security-check
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Unit Test Cases
      run: mvn test
      
  build_project_sonar_scan:
 
    runs-on: self-hosted
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build Project
      run: mvn package
      
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar 
      
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.2.0 # Or keep v5.2.0 if needed
      with:
          args: |
             -Dsonar.projectKey=GC-Bank
             -Dsonar.sources=. 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
          pollingTimeoutSec: 600
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}


  buils_docker_image_and_push:
 
    runs-on: self-hosted
    needs: build_project_sonar_scan
    steps:
    - uses: actions/checkout@v4
    
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: app  # this will download JAR to ./app folder
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
          push: true
          tags: priya989/bankapp:latest


  deploy_to_kubernetes:
   runs-on: self-hosted
   needs: buils_docker_image_and_push
   steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest

    - name: Use existing local kubeconfig
      run: |
        export KUBECONFIG=$HOME/.kube/config
        kubectl config get-contexts

    - name: Deploy to Local Kubernetes
      run: |
        kubectl apply -f ds.yml
